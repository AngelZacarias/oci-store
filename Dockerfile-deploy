# ::::::::::::::: FIRST STAGE (BUILD) :::::::::::::::
# Pull Node to build the application
FROM node:16-slim as builder

LABEL environment='Deployment'

# The workdirectory for our project
WORKDIR /usr/src/app

# Changes to root user to install dependencies
USER root

# Copies the project files
COPY . .

# Transfer the ownership to the default user
RUN chown 1001:0 -R /usr/src/app

# Switch to the default user
USER default

# Install dependencies
RUN npm install

# Updates the supported browserlist as good practice
RUN npx browserslist@latest --update-db

# Build the react app (generates html, css and js files)
RUN npm build

# ::::::::::::::: SECOND STAGE (SERVE) :::::::::::::::
# Pulls nginnx as our webserver
FROM nginx:latest as webserver

# Stablishes the workdir for nginx
WORKDIR /etc/nginx

# Uses root to copy files
USER root

# Copies the default ngnix configuration file
COPY --from=builder /usr/src/app/nginx.conf /etc/nginx/nginx.conf

# Copies the build from react to the default nginx's folder to serve them 
COPY --from=builder /usr/src/app/build /usr/share/nginx/html

# Changes ownership and user for security
RUN chown 1001:0 -R /var/run /var/log/nginx /usr/share/nginx /etc/nginx
USER default

# Uses port 8080
EXPOSE 8080

# Starts nginx without deamon
CMD ["nginx", "-g", "daemon off;"]